name: ci

on:
  # push:
  #   branches: [ master ]
  schedule:
    - cron: '*/5 * * * *'
  # push:
  #   branches:
  #     - '*' # Trigger on all branches
      
jobs:
  build-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Check for Changes in manojmanivannan/postgres-playground
        id: conditions
        env:
          GITHUB_TOKEN: ${{ secrets.DOCKER_REPO_POSTGRES_FETCH_PAT }} # Personal Access Token with repo scope
        run: |
          # Trigger a repository dispatch event in the target repository
          # Replace 'owner/repo' with the actual repository you want to monitor
          commit_date_time=$(curl -s -L -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" -H "X-Github-Api-Version 2022-11-28" https://api.github.com/repos/manojmanivannan/postgres-playground/commits | jq '.[0].commit.author.date' | sed 's/"//g')
          current_date_time=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          time_sec_diff=$(( $(date -d "$current_date_time" -u +%s) - $(date -d "$commit_date_time" -u +%s) ))
          time_min_diff=$(( $time_sec_diff % 3600 ))
          echo "Last commit on postgres-playground was at $current_date_time"
          echo "Current datetime $current_date_time"
          echo "$time_min_diff minutes passed"
          if [ "$time_min_diff" -ge 30 ]; then 
            echo "Commits were made more than 30 minutes ago, proceeding..."
            echo "::set-output name=conditions::true"
          else 
            echo "Commits were made less than 30 minutes ago, Skipping next job"
            echo "::set-output name=conditions::false"
          fi
      -
        name: Set up Docker Buildx
        if: steps.conditions.outputs.conditions == 'true'
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        if: steps.conditions.outputs.conditions == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Get Job file from manojmanivannan/postgres-playground repo
        if: steps.conditions.outputs.conditions == 'true'
        env:
          TOKEN: ${{ secrets.DOCKER_REPO_POSTGRES_FETCH_PAT }}
        run: |
          curl -H "Authorization: token ${TOKEN}" https://raw.githubusercontent.com/manojmanivannan/postgres-playground/master/dataset/job.py > ./postgres-playground-py-job/job.py
          ls ./postgres-playground-py-job/
      -
        name: Build and push Postgres Playground Py
        if: steps.conditions.outputs.conditions == 'true'
        uses: docker/build-push-action@v5
        with:
          context: postgres-playground-py-job/
          push: true
          tags: manojmanivannan18/postgres-playground-py:latest
